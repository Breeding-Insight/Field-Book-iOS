//
// ObservationVariable.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ObservationVariable: Codable {

    /** Additional arbitrary info */
    public var additionalInfo: [String:String]?
    /** Crop name (examples: \&quot;Maize\&quot;, \&quot;Wheat\&quot;) */
    public var commonCropName: String?
    /** Indication of how trait is routinely used. (examples: [\&quot;Trial evaluation\&quot;, \&quot;Nursery evaluation\&quot;]) */
    public var contextOfUse: [String]?
    /** Variable default value. (examples: \&quot;red\&quot;, \&quot;2.3\&quot;, etc.) */
    public var defaultValue: String?
    /** A URL to the human readable documentation of this object */
    public var documentationURL: String?
    /** An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI. */
    public var externalReferences: [ExternalReferencesInner]?
    /** Growth stage at which measurement is made (examples: \&quot;flowering\&quot;) */
    public var growthStage: String?
    /** Name of institution submitting the variable */
    public var institution: String?
    /** 2 letter ISO 639-1 code for the language of submission of the variable. */
    public var language: String?
    public var method: ObservationVariableMethod?
    /** Variable unique identifier  MIAPPE V1.1 (DM-83) Variable ID - Code used to identify the variable in the data file. We recommend using a variable definition from the Crop Ontology where possible. Otherwise, the Crop Ontology naming convention is recommended: &lt;trait abbreviation&gt;_&lt;method abbreviation&gt;_&lt;scale abbreviation&gt;). A variable ID must be unique within a given investigation. */
    public var observationVariableDbId: String?
    /** Variable name (usually a short name)  MIAPPE V1.1 (DM-84) Variable name - Name of the variable. */
    public var observationVariableName: String?
    public var ontologyReference: MethodOntologyReference?
    public var scale: ObservationVariableScale?
    /** Name of scientist submitting the variable. */
    public var scientist: String?
    /** Variable status. (examples: \&quot;recommended\&quot;, \&quot;obsolete\&quot;, \&quot;legacy\&quot;, etc.) */
    public var status: String?
    /** Timestamp when the Variable was added (ISO 8601) */
    public var submissionTimestamp: Date?
    /** Other variable names */
    public var synonyms: [String]?
    public var trait: ObservationVariableTrait?

    public init(additionalInfo: [String:String]? = nil, commonCropName: String? = nil, contextOfUse: [String]? = nil, defaultValue: String? = nil, documentationURL: String? = nil, externalReferences: [ExternalReferencesInner]? = nil, growthStage: String? = nil, institution: String? = nil, language: String? = nil, method: ObservationVariableMethod? = nil, observationVariableDbId: String? = nil, observationVariableName: String? = nil, ontologyReference: MethodOntologyReference? = nil, scale: ObservationVariableScale? = nil, scientist: String? = nil, status: String? = nil, submissionTimestamp: Date? = nil, synonyms: [String]? = nil, trait: ObservationVariableTrait? = nil) {
        self.additionalInfo = additionalInfo
        self.commonCropName = commonCropName
        self.contextOfUse = contextOfUse
        self.defaultValue = defaultValue
        self.documentationURL = documentationURL
        self.externalReferences = externalReferences
        self.growthStage = growthStage
        self.institution = institution
        self.language = language
        self.method = method
        self.observationVariableDbId = observationVariableDbId
        self.observationVariableName = observationVariableName
        self.ontologyReference = ontologyReference
        self.scale = scale
        self.scientist = scientist
        self.status = status
        self.submissionTimestamp = submissionTimestamp
        self.synonyms = synonyms
        self.trait = trait
    }


}
