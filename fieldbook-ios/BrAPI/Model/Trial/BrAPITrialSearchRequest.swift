//
// TrialSearchRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct BrAPITrialSearchRequest: Codable {

    /** Is this trail currently active */
    public var active: Bool?
    /** Common name for the crop which this program is for */
    public var commonCropNames: [String]?
    /** List of contact entities associated with this trial */
    public var contactDbIds: [String]?
    /** List of external reference IDs. Could be a simple strings or a URIs. (use with &#x60;externalReferenceSources&#x60; parameter) */
    public var externalReferenceIDs: [String]?
    /** List of identifiers for the source system or database of an external reference (use with &#x60;externalReferenceIDs&#x60; parameter) */
    public var externalReferenceSources: [String]?
    /** The location ids to search for */
    public var locationDbIds: [String]?
    /** A human readable names to search for */
    public var locationNames: [String]?
    /** Which result page is requested. The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. */
    public var page: Int?
    /** The size of the pages to be returned. Default is &#x60;1000&#x60;. */
    public var pageSize: Int?
    /** A program identifier to search for */
    public var programDbIds: [String]?
    /** A name of a program to search for */
    public var programNames: [String]?
    /** The end of the overlapping search date range. &#x60;searchDateRangeStart&#x60; must be before &#x60;searchDateRangeEnd&#x60;.  Return a Trial entity if any of the following cases are true  - &#x60;searchDateRangeStart&#x60; is before &#x60;trial.endDate&#x60; AND &#x60;searchDateRangeEnd&#x60; is null   - &#x60;searchDateRangeStart&#x60; is before &#x60;trial.endDate&#x60; AND &#x60;searchDateRangeEnd&#x60; is after &#x60;trial.startDate&#x60;  - &#x60;searchDateRangeEnd&#x60; is after &#x60;trial.startDate&#x60; AND &#x60;searchDateRangeStart&#x60; is null  - &#x60;searchDateRangeEnd&#x60; is after &#x60;trial.startDate&#x60; AND &#x60;searchDateRangeStart&#x60; is before &#x60;trial.endDate&#x60; */
    public var searchDateRangeEnd: Date?
    /** The start of the overlapping search date range. &#x60;searchDateRangeStart&#x60; must be before &#x60;searchDateRangeEnd&#x60;.  Return a Trial entity if any of the following cases are true  - &#x60;searchDateRangeStart&#x60; is before &#x60;trial.endDate&#x60; AND &#x60;searchDateRangeEnd&#x60; is null   - &#x60;searchDateRangeStart&#x60; is before &#x60;trial.endDate&#x60; AND &#x60;searchDateRangeEnd&#x60; is after &#x60;trial.startDate&#x60;  - &#x60;searchDateRangeEnd&#x60; is after &#x60;trial.startDate&#x60; AND &#x60;searchDateRangeStart&#x60; is null  - &#x60;searchDateRangeEnd&#x60; is after &#x60;trial.startDate&#x60; AND &#x60;searchDateRangeStart&#x60; is before &#x60;trial.endDate&#x60; */
    public var searchDateRangeStart: Date?
    /** List of study identifiers to search for */
    public var studyDbIds: [String]?
    /** List of study names to filter search results */
    public var studyNames: [String]?
    /** The ID which uniquely identifies a trial to search for */
    public var trialDbIds: [String]?
    /** The human readable name of a trial to search for */
    public var trialNames: [String]?
    /** A permanent identifier for a trial. Could be DOI or other URI formatted identifier. */
    public var trialPUIs: [String]?

    public init(active: Bool? = nil, commonCropNames: [String]? = nil, contactDbIds: [String]? = nil, externalReferenceIDs: [String]? = nil, externalReferenceSources: [String]? = nil, locationDbIds: [String]? = nil, locationNames: [String]? = nil, page: Int? = nil, pageSize: Int? = nil, programDbIds: [String]? = nil, programNames: [String]? = nil, searchDateRangeEnd: Date? = nil, searchDateRangeStart: Date? = nil, studyDbIds: [String]? = nil, studyNames: [String]? = nil, trialDbIds: [String]? = nil, trialNames: [String]? = nil, trialPUIs: [String]? = nil) {
        self.active = active
        self.commonCropNames = commonCropNames
        self.contactDbIds = contactDbIds
        self.externalReferenceIDs = externalReferenceIDs
        self.externalReferenceSources = externalReferenceSources
        self.locationDbIds = locationDbIds
        self.locationNames = locationNames
        self.page = page
        self.pageSize = pageSize
        self.programDbIds = programDbIds
        self.programNames = programNames
        self.searchDateRangeEnd = searchDateRangeEnd
        self.searchDateRangeStart = searchDateRangeStart
        self.studyDbIds = studyDbIds
        self.studyNames = studyNames
        self.trialDbIds = trialDbIds
        self.trialNames = trialNames
        self.trialPUIs = trialPUIs
    }


}
