//
// MetadataPagination.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** The pagination object is applicable only when the payload contains a \&quot;data\&quot; key. It describes the pagination of the data contained in the \&quot;data\&quot; array, as a way to identify which subset of data is being returned.   Pages are zero indexed, so the first page will be page 0 (zero). */

public struct BrAPIMetadataPagination: Codable {

    /** The index number for the returned page of data. This should always match the requested page number or the default page (0). */
    public var currentPage: Int?
    /** The number of data elements returned, aka the size of the current page. If the requested page does not have enough elements to fill a page at the requested page size, this field should indicate the actual number of elements returned. */
    public var pageSize: Int?
    /** The total number of elements that are available on the server and match the requested query parameters. */
    public var totalCount: Int?
    /** The total number of pages of elements available on the server. This should be calculated with the following formula.   totalPages &#x3D; CEILING( totalCount / requested_page_size) */
    public var totalPages: Int?

    public init(currentPage: Int? = nil, pageSize: Int? = nil, totalCount: Int? = nil, totalPages: Int? = nil) {
        self.currentPage = currentPage
        self.pageSize = pageSize
        self.totalCount = totalCount
        self.totalPages = totalPages
    }


}
