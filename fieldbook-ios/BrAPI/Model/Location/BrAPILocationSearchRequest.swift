//
// LocationSearchRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct BrAPILocationSearchRequest: Codable {

    /** An abbreviation which represents this location */
    public var abbreviations: [String]?
    /** The maximum altitude to search for */
    public var altitudeMax: Decimal?
    /** The minimum altitude to search for */
    public var altitudeMin: Decimal?
    public var coordinates: BrAPIGeoJSONSearchArea?
    /** [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec */
    public var countryCodes: [String]?
    /** The full name of the country to search for */
    public var countryNames: [String]?
    /** List of external reference IDs. Could be a simple strings or a URIs. (use with &#x60;externalReferenceSources&#x60; parameter) */
    public var externalReferenceIDs: [String]?
    /** List of identifiers for the source system or database of an external reference (use with &#x60;externalReferenceIDs&#x60; parameter) */
    public var externalReferenceSources: [String]?
    /** The street address of the institute to search for */
    public var instituteAddresses: [String]?
    /** The name of the institute to search for */
    public var instituteNames: [String]?
    /** The location ids to search for */
    public var locationDbIds: [String]?
    /** A human readable names to search for */
    public var locationNames: [String]?
    /** The type of location this represents (ex. Breeding Location, Storage Location, etc) */
    public var locationTypes: [String]?
    /** Which result page is requested. The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. */
    public var page: Int?
    /** The size of the pages to be returned. Default is &#x60;1000&#x60;. */
    public var pageSize: Int?

    public init(abbreviations: [String]? = nil, altitudeMax: Decimal? = nil, altitudeMin: Decimal? = nil, coordinates: BrAPIGeoJSONSearchArea? = nil, countryCodes: [String]? = nil, countryNames: [String]? = nil, externalReferenceIDs: [String]? = nil, externalReferenceSources: [String]? = nil, instituteAddresses: [String]? = nil, instituteNames: [String]? = nil, locationDbIds: [String]? = nil, locationNames: [String]? = nil, locationTypes: [String]? = nil, page: Int? = nil, pageSize: Int? = nil) {
        self.abbreviations = abbreviations
        self.altitudeMax = altitudeMax
        self.altitudeMin = altitudeMin
        self.coordinates = coordinates
        self.countryCodes = countryCodes
        self.countryNames = countryNames
        self.externalReferenceIDs = externalReferenceIDs
        self.externalReferenceSources = externalReferenceSources
        self.instituteAddresses = instituteAddresses
        self.instituteNames = instituteNames
        self.locationDbIds = locationDbIds
        self.locationNames = locationNames
        self.locationTypes = locationTypes
        self.page = page
        self.pageSize = pageSize
    }


}
