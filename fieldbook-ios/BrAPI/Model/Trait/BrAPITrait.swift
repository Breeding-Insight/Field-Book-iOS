//
// Trait.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct BrAPITrait: Codable {

    /** Additional arbitrary info */
    public var additionalInfo: [String:String]?
    /** Other frequent abbreviations of the trait, if any. These abbreviations do not have to follow a convention */
    public var alternativeAbbreviations: [String]?
    /** A trait can be decomposed as \&quot;Trait\&quot; &#x3D; \&quot;Entity\&quot; + \&quot;Attribute\&quot;, the attribute is the observed feature (or characteristic) of the entity e.g., for \&quot;grain colour\&quot;, attribute &#x3D; \&quot;colour\&quot; */
    public var attribute: String?
    /** A trait can be decomposed as \&quot;Trait\&quot; &#x3D; \&quot;Entity\&quot; + \&quot;Attribute\&quot;, the entity is the part of the plant that the trait refers to e.g., for \&quot;grain colour\&quot;, entity &#x3D; \&quot;grain\&quot; */
    public var entity: String?
    /** An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI. */
    public var externalReferences: [BrAPIExternalReferencesInner]?
    /** Main abbreviation for trait name. (examples: \&quot;Carotenoid content\&quot; &#x3D;&gt; \&quot;CC\&quot;) */
    public var mainAbbreviation: String?
    public var ontologyReference: BrAPIOntologyReference?
    /** Trait status (examples: \&quot;recommended\&quot;, \&quot;obsolete\&quot;, \&quot;legacy\&quot;, etc.) */
    public var status: String?
    /** Other trait names */
    public var synonyms: [String]?
    /** Trait class. (examples: \&quot;morphological\&quot;, \&quot;phenological\&quot;, \&quot;agronomical\&quot;, \&quot;physiological\&quot;, \&quot;abiotic stress\&quot;, \&quot;biotic stress\&quot;, \&quot;biochemical\&quot;, \&quot;quality traits\&quot;, \&quot;fertility\&quot;, etc.) */
    public var traitClass: String?
    /** The ID which uniquely identifies a trait */
    public var traitDbId: String?
    /** The description of a trait */
    public var traitDescription: String?
    /** The human readable name of a trait  MIAPPE V1.1 (DM-86) Trait - Name of the (plant or environmental) trait under observation */
    public var traitName: String?

    public init(additionalInfo: [String:String]? = nil, alternativeAbbreviations: [String]? = nil, attribute: String? = nil, entity: String? = nil, externalReferences: [BrAPIExternalReferencesInner]? = nil, mainAbbreviation: String? = nil, ontologyReference: BrAPIOntologyReference? = nil, status: String? = nil, synonyms: [String]? = nil, traitClass: String? = nil, traitDbId: String? = nil, traitDescription: String? = nil, traitName: String? = nil) {
        self.additionalInfo = additionalInfo
        self.alternativeAbbreviations = alternativeAbbreviations
        self.attribute = attribute
        self.entity = entity
        self.externalReferences = externalReferences
        self.mainAbbreviation = mainAbbreviation
        self.ontologyReference = ontologyReference
        self.status = status
        self.synonyms = synonyms
        self.traitClass = traitClass
        self.traitDbId = traitDbId
        self.traitDescription = traitDescription
        self.traitName = traitName
    }


}
