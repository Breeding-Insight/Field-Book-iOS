//
// ImageNewRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ImageNewRequest: Codable {

    public var additionalInfo: [String:String]?
    /** The copyright information of this image. Example &#x27;Copyright 2018 Bob Robertson&#x27; */
    public var copyright: String?
    /** The human readable description of an image. */
    public var _description: String?
    /** A list of terms to formally describe the image. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL. */
    public var descriptiveOntologyTerms: [String]?
    /** An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI. */
    public var externalReferences: [ExternalReferencesInner]?
    /** The name of the image file. Might be the same as &#x27;imageName&#x27;, but could be different. */
    public var imageFileName: String?
    /** The size of the image in Bytes. */
    public var imageFileSize: Int?
    /** The height of the image in Pixels. */
    public var imageHeight: Int?
    public var imageLocation: GeoJSON?
    /** The human readable name of an image. Might be the same as &#x27;imageFileName&#x27;, but could be different. */
    public var imageName: String?
    /** The date and time the image was taken */
    public var imageTimeStamp: Date?
    /** The complete, absolute URI path to the image file. Images might be stored on a different host or path than the BrAPI web server. */
    public var imageURL: String?
    /** The width of the image in Pixels. */
    public var imageWidth: Int?
    /** The file type of the image. Examples &#x27;image/jpeg&#x27;, &#x27;image/png&#x27;, &#x27;image/svg&#x27;, etc */
    public var mimeType: String?
    /** A list of observation Ids this image is associated with, if applicable. */
    public var observationDbIds: [String]?
    /** The related observation unit identifier, if relevant. */
    public var observationUnitDbId: String?

    public init(additionalInfo: [String:String]? = nil, copyright: String? = nil, _description: String? = nil, descriptiveOntologyTerms: [String]? = nil, externalReferences: [ExternalReferencesInner]? = nil, imageFileName: String? = nil, imageFileSize: Int? = nil, imageHeight: Int? = nil, imageLocation: GeoJSON? = nil, imageName: String? = nil, imageTimeStamp: Date? = nil, imageURL: String? = nil, imageWidth: Int? = nil, mimeType: String? = nil, observationDbIds: [String]? = nil, observationUnitDbId: String? = nil) {
        self.additionalInfo = additionalInfo
        self.copyright = copyright
        self._description = _description
        self.descriptiveOntologyTerms = descriptiveOntologyTerms
        self.externalReferences = externalReferences
        self.imageFileName = imageFileName
        self.imageFileSize = imageFileSize
        self.imageHeight = imageHeight
        self.imageLocation = imageLocation
        self.imageName = imageName
        self.imageTimeStamp = imageTimeStamp
        self.imageURL = imageURL
        self.imageWidth = imageWidth
        self.mimeType = mimeType
        self.observationDbIds = observationDbIds
        self.observationUnitDbId = observationUnitDbId
    }

    public enum CodingKeys: String, CodingKey { 
        case additionalInfo
        case copyright
        case _description = "description"
        case descriptiveOntologyTerms
        case externalReferences
        case imageFileName
        case imageFileSize
        case imageHeight
        case imageLocation
        case imageName
        case imageTimeStamp
        case imageURL
        case imageWidth
        case mimeType
        case observationDbIds
        case observationUnitDbId
    }

}
