//
// ObservationVariableSearchRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ObservationVariableSearchRequest: Codable {

    public enum DataTypes: String, Codable { 
        case code = "Code"
        case date = "Date"
        case duration = "Duration"
        case nominal = "Nominal"
        case numerical = "Numerical"
        case ordinal = "Ordinal"
        case text = "Text"
    }
    /** List of scale data types to filter search results */
    public var dataTypes: [DataTypes]?
    /** List of external reference IDs. Could be a simple strings or a URIs. (use with &#x60;externalReferenceSources&#x60; parameter) */
    public var externalReferenceIDs: [String]?
    /** List of identifiers for the source system or database of an external reference (use with &#x60;externalReferenceIDs&#x60; parameter) */
    public var externalReferenceSources: [String]?
    /** List of methods to filter search results */
    public var methodDbIds: [String]?
    /** List of observation variable IDs to search for */
    public var observationVariableDbIds: [String]?
    /** List of human readable observation variable names to search for */
    public var observationVariableNames: [String]?
    /** List of ontology IDs to search for */
    public var ontologyDbIds: [String]?
    /** Which result page is requested. The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. */
    public var page: Int?
    /** The size of the pages to be returned. Default is &#x60;1000&#x60;. */
    public var pageSize: Int?
    /** List of scales to filter search results */
    public var scaleDbIds: [String]?
    /** The unique ID of a studies to filter on */
    public var studyDbId: [String]?
    /** List of trait classes to filter search results */
    public var traitClasses: [String]?
    /** List of trait unique ID to filter search results */
    public var traitDbIds: [String]?

    public init(dataTypes: [DataTypes]? = nil, externalReferenceIDs: [String]? = nil, externalReferenceSources: [String]? = nil, methodDbIds: [String]? = nil, observationVariableDbIds: [String]? = nil, observationVariableNames: [String]? = nil, ontologyDbIds: [String]? = nil, page: Int? = nil, pageSize: Int? = nil, scaleDbIds: [String]? = nil, studyDbId: [String]? = nil, traitClasses: [String]? = nil, traitDbIds: [String]? = nil) {
        self.dataTypes = dataTypes
        self.externalReferenceIDs = externalReferenceIDs
        self.externalReferenceSources = externalReferenceSources
        self.methodDbIds = methodDbIds
        self.observationVariableDbIds = observationVariableDbIds
        self.observationVariableNames = observationVariableNames
        self.ontologyDbIds = ontologyDbIds
        self.page = page
        self.pageSize = pageSize
        self.scaleDbIds = scaleDbIds
        self.studyDbId = studyDbId
        self.traitClasses = traitClasses
        self.traitDbIds = traitDbIds
    }


}
