//
// ObservationUnit.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ObservationUnit: Codable {

    /** Additional arbitrary info */
    public var additionalInfo: [String:String]?
    /** An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI. */
    public var externalReferences: [ExternalReferencesInner]?
    /** The ID which uniquely identifies a germplasm */
    public var germplasmDbId: String?
    /** Name of the germplasm. It can be the preferred name and does not have to be unique. */
    public var germplasmName: String?
    /** The ID which uniquely identifies a location, associated with this study */
    public var locationDbId: String?
    /** The human readable name of a location associated with this study */
    public var locationName: String?
    /** The ID which uniquely identifies an observation unit  MIAPPE V1.1 (DM-70) Observation unit ID - Identifier used to identify the observation unit in data files containing the values observed or measured on that unit. Must be locally unique.  */
    public var observationUnitDbId: String?
    /** A human readable name for an observation unit */
    public var observationUnitName: String?
    /** A Permanent Unique Identifier for an observation unit  MIAPPE V1.1 (DM-72) External ID - Identifier for the observation unit in a persistent repository, comprises the name of the repository and the identifier of the observation unit therein. The EBI Biosamples repository can be used. URI are recommended when possible. */
    public var observationUnitPUI: String?
    public var observationUnitPosition: ObservationUnitPosition?
    /** All observations attached to this observation unit.   Default for this field is null or omitted. Do NOT include data in this field unless the &#x27;includeObservations&#x27; flag is explicitly set to True. */
    public var observations: [Observation]
    /** The ID which uniquely identifies a program */
    public var programDbId: String?
    /** The human readable name of a program */
    public var programName: String?
    /** The unique identifier for the originating Seed Lot */
    public var seedLotDbId: String?
    /** The ID which uniquely identifies a study within the given database server */
    public var studyDbId: String?
    /** The human readable name for a study */
    public var studyName: String?
    /** List of treatments applied to an observation unit.  MIAPPE V1.1 (DM-74) Observation Unit factor value - List of values for each factor applied to the observation unit. */
    public var treatments: [Treatment]?
    /** The ID which uniquely identifies a trial */
    public var trialDbId: String?
    /** The human readable name of a trial */
    public var trialName: String?

    public init(additionalInfo: [String:String]? = nil, externalReferences: [ExternalReferencesInner]? = nil, germplasmDbId: String? = nil, germplasmName: String? = nil, locationDbId: String? = nil, locationName: String? = nil, observationUnitDbId: String? = nil, observationUnitName: String? = nil, observationUnitPUI: String? = nil, observationUnitPosition: ObservationUnitPosition? = nil, observations: [Observation] = Array(), programDbId: String? = nil, programName: String? = nil, seedLotDbId: String? = nil, studyDbId: String? = nil, studyName: String? = nil, treatments: [Treatment]? = [], trialDbId: String? = nil, trialName: String? = nil) {
        self.additionalInfo = additionalInfo
        self.externalReferences = externalReferences
        self.germplasmDbId = germplasmDbId
        self.germplasmName = germplasmName
        self.locationDbId = locationDbId
        self.locationName = locationName
        self.observationUnitDbId = observationUnitDbId
        self.observationUnitName = observationUnitName
        self.observationUnitPUI = observationUnitPUI
        self.observationUnitPosition = observationUnitPosition
        self.observations = observations
        self.programDbId = programDbId
        self.programName = programName
        self.seedLotDbId = seedLotDbId
        self.studyDbId = studyDbId
        self.studyName = studyName
        self.treatments = treatments
        self.trialDbId = trialDbId
        self.trialName = trialName
    }


}
